// fr.js
const fr = {
  Projects: "Projets",
  Settings: "Param\u00E8tres",
  Language: "Langue",
  new_project: "Nouveau projet",
  project_name: "Nom du projet",
  cancel: "Annuler",
  confirm: "Confirmer",
  back: "Retour",
  new_component: "Nouveau composant",
  rename_component: "Renommer le composant",
  select_component: "S\u00E9lectionner un composant",
  add_new_relationship: "Ajouter une nouvelle relation",
  linked_components: "Composants li\u00E9s",
  component_details: "D\u00E9tails du composant",
  component_relationships: "Relations du composant",
  component_color: "Couleur du composant",
  component_attributes: "Attributs du composant",
  component_operations: "Op\u00E9rations du composant",
  delete_component: "Supprimer le composant",
  go_to_component: "Aller au composant",
  close: "Fermer",
  download_data: "T\u00E9l\u00E9charger les donn\u00E9es",
  component: "Composant",
  class: "Classe",
  component_name: "Nom du composant",
  component_type: "Type de composant",
  anonymous: "Anonyme",
  feedback: "Retour",
  signal_improvement: "Signaler une am\u00E9lioration",
  leave_suggestion: "Laisser une suggestion",
  name: "Nom",
  name_optional: "Votre nom (optionnel)",
  suggestion: "Suggestion",
  suggestion_placeholder: "\u00C9crivez votre suggestion ici...",
  submit: "Envoyer",
  export_full_project: "Capturer Le Projet Complet",
export_viewport: "Capturer La Vue",
  failed_fetch_repo: "\u00C9chec de la r\u00E9cup\u00E9ration du d\u00E9p\u00F4t",
  failed_fetch_file: "\u00C9chec de la r\u00E9cup\u00E9ration du fichier",
  invalid_github_url: "URL GitHub invalide",
  unknown_import_error: "Erreur d'importation inconnue",
  import_github_repo: "Importer un d\u00E9p\u00F4t GitHub",
  github_repo_url: "URL du d\u00E9p\u00F4t GitHub",
  importing_repository: "Importation du d\u00E9p\u00F4t...",
  import: "Importer",
  import_from_github: "Importer depuis GitHub",
   glossary: "Glossaire",
aggregation: "Agr\u00E9gation",
aggregation_description: "Une relation 'poss\u00E8de', mais l'\u00E9l\u00E9ment enfant peut exister ind\u00E9pendamment du parent.",
aggregation_example: "Exemple : Une \u00C9quipe poss\u00E8de des Joueurs. Si l'\u00C9quipe est supprim\u00E9e, les Joueurs existent toujours.",
composition: "Composition",
composition_description: "Une relation 'poss\u00E8de' forte o\u00F9 le cycle de vie de l'enfant est li\u00E9 \u00E0 celui du parent.",
composition_example: "Exemple : Une Maison poss\u00E8de des Pi\u00E8ces. Si la Maison est d\u00E9truite, les Pi\u00E8ces le sont aussi.",
inheritance: "H\u00E9ritage",
inheritance_description: "Une relation 'est-un' o\u00F9 une classe d\u00E9rive d'une autre.",
inheritance_example: "Exemple : Une Voiture est un V\u00E9hicule.",
association: "Association",
association_description: "Une connexion g\u00E9n\u00E9rale entre deux classes. Aucune propri\u00E9t\u00E9 implicite.",
association_example: "Exemple : Un Professeur est associ\u00E9 \u00E0 plusieurs \u00C9l\u00E8ves.",
dependency: "D\u00E9pendance",
dependency_description: "Une classe utilise ou d\u00E9pend d'une autre pour une fonctionnalit\u00E9, mais seulement temporairement.",
dependency_example: "Exemple : Un G\u00E9n\u00E9rateur de Rapport d\u00E9pend d'une Base de Donn\u00E9es pendant l'ex\u00E9cution.",
realization: "R\u00E9alisation",
realization_description: "Une relation o\u00F9 une classe concr\u00E8te impl\u00E9mente l'interface ou le contrat d\u00E9fini par une autre.",
realization_example: "Exemple : Une Classe Voiture r\u00E9alise l'interface V\u00E9hicule."

};

export default fr;
