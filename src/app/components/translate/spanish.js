// es.js
const es = {
  Projects: "Proyectos",
  Settings: "Configuraci\u00F3n",
  Language: "Idioma",
  new_project: "Nuevo proyecto",
  project_name: "Nombre del proyecto",
  cancel: "Cancelar",
  confirm: "Confirmar",
  back: "Volver",
  new_component: "Nuevo componente",
  rename_component: "Renombrar componente",
  select_component: "Seleccionar componente",
  add_new_relationship: "Agregar nueva relaci\u00F3n",
  linked_components: "Componentes vinculados",
  component_details: "Detalles del componente",
  component_relationships: "Relaciones del componente",
  component_color: "Color del componente",
  component_attributes: "Atributos del componente",
  component_operations: "Operaciones del componente",
  delete_component: "Eliminar componente",
  go_to_component: "Ir al componente",
  close: "Cerrar",
  download_data: "Descargar datos",
  component: "Componente",
  class: "Clase",
  component_name: "Nombre del componente",
  component_type: "Tipo de componente",
  anonymous: "An\u00F3nimo",
  feedback: "Retroalimentaci\u00F3n",
  signal_improvement: "Se\u00F1alar una mejora",
  leave_suggestion: "Dejar una sugerencia",
  name: "Nombre",
  name_optional: "Tu nombre (opcional)",
  suggestion: "Sugerencia",
  suggestion_placeholder: "Escribe tu sugerencia aqu\u00ED...",
  submit: "Enviar",
  export_full_project: "Capturar el proyecto completo",
  export_viewport: "Capturar la vista",
  failed_fetch_repo: "Error al obtener el repositorio",
  failed_fetch_file: "Error al obtener el archivo",
  invalid_github_url: "URL de GitHub inv\u00E1lida",
  unknown_import_error: "Error de importaci\u00F3n desconocido",
  import_github_repo: "Importar repositorio de GitHub",
  github_repo_url: "URL del repositorio de GitHub",
  importing_repository: "Importando repositorio...",
  import: "Importar",
  import_from_github: "Importar desde GitHub",
  glossary: "Glosario",
  aggregation: "Agregaci\u00F3n",
  aggregation_description: "Una relaci\u00F3n 'posee', pero el elemento hijo puede existir independientemente del padre.",
  aggregation_example: "Ejemplo: Un Equipo posee Jugadores. Si se elimina el Equipo, los Jugadores siguen existiendo.",
  composition: "Composici\u00F3n",
  composition_description: "Una relaci\u00F3n 'posee' fuerte donde el ciclo de vida del hijo est\u00E1 ligado al del padre.",
  composition_example: "Ejemplo: Una Casa posee Habitaciones. Si la Casa se destruye, las Habitaciones tambi\u00E9n.",
  inheritance: "Herencia",
  inheritance_description: "Una relaci\u00F3n 'es un' donde una clase deriva de otra.",
  inheritance_example: "Ejemplo: Un Coche es un Veh\u00EDculo.",
  association: "Asociaci\u00F3n",
  association_description: "Una conexi\u00F3n general entre dos clases. No hay propiedad impl\u00EDcita.",
  association_example: "Ejemplo: Un Profesor est\u00E1 asociado con varios Estudiantes.",
  dependency: "Dependencia",
  dependency_description: "Una clase usa o depende de otra para una funcionalidad, pero solo temporalmente.",
  dependency_example: "Ejemplo: Un Generador de Informes depende de una Base de Datos en tiempo de ejecuci\u00F3n.",
  realization: "Realizaci\u00F3n",
  realization_description: "Una relaci\u00F3n donde una clase concreta implementa la interfaz o contrato definido por otra.",
  realization_example: "Ejemplo: Una Clase Coche realiza la interfaz Veh\u00EDculo."
};

export default es;
